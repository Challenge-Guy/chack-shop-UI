{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "link-button",
  "file": {
    "name": "link-button.tsx",
    "content": "\"use client\"\n\nimport type { HTMLChakraProps, SlotRecipeProps } from \"@chakra-ui/react\"\nimport { Button, chakra, useRecipe } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\n\nexport interface LinkButtonProps\n  extends HTMLChakraProps<\"a\">,\n    SlotRecipeProps<\"Button\"> {}\n\n// Replace \"a\" with your framework's link component\nconst StyledLink = chakra(\"a\")\n\nexport const LinkButton = forwardRef<HTMLAnchorElement, LinkButtonProps>(\n  function LinkButton(props, ref) {\n    const { children, ...rest } = props\n    const recipe = useRecipe(\"Button\", props.recipe)\n    const [variantProps, localProps] = recipe.splitVariantProps(rest)\n    return (\n      <Button asChild {...variantProps}>\n        <StyledLink ref={ref} {...localProps}>\n          {children}\n        </StyledLink>\n      </Button>\n    )\n  },\n)\n"
  },
  "component": "LinkButton"
}