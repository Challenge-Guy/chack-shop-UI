{
  "type": "composition",
  "npmDependencies": [],
  "fileDependencies": [],
  "id": "avatar",
  "file": {
    "name": "avatar.tsx",
    "content": "import { Avatar as ChakraAvatar } from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\n\ntype ImageProps = React.ImgHTMLAttributes<HTMLImageElement>\n\nexport interface AvatarProps extends ChakraAvatar.RootProps {\n  name?: string\n  src?: string\n  srcSet?: string\n  loading?: ImageProps[\"loading\"]\n  icon?: React.ReactElement\n  fallback?: React.ReactNode\n}\n\nexport const Avatar = forwardRef<HTMLDivElement, AvatarProps>(\n  function Avatar(props, ref) {\n    const { name, src, srcSet, loading, icon, fallback, children, ...rest } =\n      props\n    return (\n      <ChakraAvatar.Root ref={ref} {...rest}>\n        <AvatarFallback name={name} icon={icon}>\n          {fallback}\n        </AvatarFallback>\n        <ChakraAvatar.Image src={src} srcSet={srcSet} loading={loading} />\n        {children}\n      </ChakraAvatar.Root>\n    )\n  },\n)\n\ninterface AvatarFallbackProps extends ChakraAvatar.FallbackProps {\n  name?: string\n  icon?: React.ReactElement\n}\n\nconst AvatarFallback = forwardRef<HTMLDivElement, AvatarFallbackProps>(\n  function AvatarFallback(props, ref) {\n    const { name, icon, children, ...rest } = props\n    return (\n      <ChakraAvatar.Fallback ref={ref} {...rest}>\n        {children}\n        {name != null && children == null && <>{getInitials(name)}</>}\n        {name == null && children == null && (\n          <ChakraAvatar.Icon asChild={!!icon}>{icon}</ChakraAvatar.Icon>\n        )}\n      </ChakraAvatar.Fallback>\n    )\n  },\n)\n\nfunction getInitials(name: string) {\n  const names = name.trim().split(\" \")\n  const firstName = names[0] ?? \"\"\n  const lastName = names.length > 1 ? names[names.length - 1] : \"\"\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n"
  },
  "component": "Avatar"
}