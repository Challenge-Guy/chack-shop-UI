{
  "type": "composition",
  "npmDependencies": [
    "react-icons"
  ],
  "fileDependencies": [],
  "id": "file-button",
  "file": {
    "name": "file-button.tsx",
    "content": "\"use client\"\n\nimport {\n  FileUpload as ChakraFileUpload,\n  IconButton,\n  Square,\n  Stack,\n  Text,\n} from \"@chakra-ui/react\"\nimport { forwardRef } from \"react\"\nimport { LuFile, LuTrash2 } from \"react-icons/lu\"\n\nexport interface FileButtonProps extends ChakraFileUpload.RootProps {\n  inputProps?: React.InputHTMLAttributes<HTMLInputElement>\n  rootRef?: React.Ref<HTMLDivElement>\n}\n\nexport const FileButton = forwardRef<HTMLInputElement, FileButtonProps>(\n  function FileButton(props, ref) {\n    const { children, inputProps, rootRef, ...rest } = props\n    return (\n      <ChakraFileUpload.Root alignItems=\"flex-start\" ref={rootRef} {...rest}>\n        <ChakraFileUpload.HiddenInput ref={ref} {...inputProps} />\n        <ChakraFileUpload.Trigger asChild>{children}</ChakraFileUpload.Trigger>\n        <FileUploadList showSize showDelete />\n      </ChakraFileUpload.Root>\n    )\n  },\n)\n\nexport const FileDropzone = forwardRef<HTMLInputElement, FileButtonProps>(\n  function FileDropzone(props, ref) {\n    const { children, inputProps, rootRef, ...rest } = props\n    return (\n      <ChakraFileUpload.Root ref={rootRef} {...rest}>\n        <ChakraFileUpload.HiddenInput ref={ref} {...inputProps} />\n        <ChakraFileUpload.Dropzone>\n          <Square size=\"10\" bg=\"bg\" rounded=\"sm\" borderWidth=\"1px\">\n            <LuFile />\n          </Square>\n          <div>\n            Drag and drop your files here or{\" \"}\n            <ChakraFileUpload.Trigger color=\"blue.500\">\n              click to browse\n            </ChakraFileUpload.Trigger>\n          </div>\n          <Text fontSize=\"sm\" color=\"fg.subtle\">\n            .png, .jpg up to 5MB\n          </Text>\n          {children}\n        </ChakraFileUpload.Dropzone>\n        <FileUploadList showSize showDelete />\n      </ChakraFileUpload.Root>\n    )\n  },\n)\n\ninterface VisiblityProps {\n  showSize?: boolean\n  showDelete?: boolean\n}\n\ninterface ItemProps extends VisiblityProps {\n  file: File\n}\n\nconst FileUploadItem = (props: ItemProps) => {\n  const { file, showSize, showDelete } = props\n  return (\n    <ChakraFileUpload.Item file={file}>\n      <ChakraFileUpload.ItemPreview asChild>\n        <Square\n          size=\"10\"\n          bg=\"bg.muted\"\n          rounded=\"sm\"\n          fontSize=\"lg\"\n          color=\"fg.muted\"\n        >\n          <LuFile />\n        </Square>\n      </ChakraFileUpload.ItemPreview>\n\n      {showSize ? (\n        <Stack gap=\"0.5\" flex=\"1\" pe=\"4\">\n          <ChakraFileUpload.ItemName lineClamp=\"1\" />\n          <ChakraFileUpload.ItemSizeText />\n        </Stack>\n      ) : (\n        <ChakraFileUpload.ItemName lineClamp=\"1\" flex=\"1\" pe=\"4\" />\n      )}\n\n      {showDelete && (\n        <ChakraFileUpload.ItemDeleteTrigger asChild>\n          <IconButton variant=\"ghost\" color=\"fg.subtle\">\n            <LuTrash2 />\n          </IconButton>\n        </ChakraFileUpload.ItemDeleteTrigger>\n      )}\n    </ChakraFileUpload.Item>\n  )\n}\n\ninterface ListProps extends VisiblityProps, ChakraFileUpload.ItemGroupProps {}\n\nconst FileUploadList = (props: ListProps) => {\n  const { showSize, showDelete, ...rest } = props\n  return (\n    <ChakraFileUpload.Context>\n      {({ acceptedFiles }) => {\n        if (acceptedFiles.length === 0) return null\n        return (\n          <ChakraFileUpload.ItemGroup {...rest}>\n            {acceptedFiles.map((file) => (\n              <FileUploadItem\n                key={file.name}\n                file={file}\n                showSize={showSize}\n                showDelete={showDelete}\n              />\n            ))}\n          </ChakraFileUpload.ItemGroup>\n        )\n      }}\n    </ChakraFileUpload.Context>\n  )\n}\n"
  },
  "component": "FileButton"
}