{
  "AspectRatio": {
    "ratio": {
      "type": "ConditionalValue<number>",
      "isRequired": false,
      "description": "The aspect ratio of the Box. Common values are:\n\n`21/9`, `16/9`, `9/16`, `4/3`, `1.85/1`"
    }
  },
  "Container": {
    "centerContent": {
      "type": "boolean",
      "defaultValue": false,
      "isRequired": false,
      "description": "If `true`, container will center its children\nregardless of their width."
    }
  },
  "Center": {},
  "AbsoluteCenter": {
    "axis": {
      "type": "\"horizontal\" | \"vertical\" | \"both\"",
      "isRequired": false
    }
  },
  "Box": {},
  "Square": {
    "size": {
      "type": "BoxProps[\"boxSize\"]",
      "isRequired": false,
      "description": "The size (width and height) of the square"
    }
  },
  "Circle": {
    "size": {
      "type": "BoxProps[\"boxSize\"]",
      "isRequired": false,
      "description": "The size (width and height) of the square"
    }
  },
  "Span": {},
  "Absolute": {},
  "Sticky": {},
  "Highlight": {
    "query": {
      "type": "string | string[]",
      "isRequired": true
    },
    "styles": {
      "type": "SystemStyleObject",
      "isRequired": false
    }
  },
  "UseHighlight": {
    "text": {
      "type": "string",
      "isRequired": true
    },
    "query": {
      "type": "string | string[]",
      "isRequired": true
    }
  },
  "Flex": {
    "align": {
      "type": "SystemStyleObject[\"alignItems\"]",
      "isRequired": false
    },
    "justify": {
      "type": "SystemStyleObject[\"justifyContent\"]",
      "isRequired": false
    },
    "wrap": {
      "type": "SystemStyleObject[\"flexWrap\"]",
      "isRequired": false
    },
    "direction": {
      "type": "SystemStyleObject[\"flexDirection\"]",
      "isRequired": false
    },
    "basis": {
      "type": "SystemStyleObject[\"flexBasis\"]",
      "isRequired": false
    },
    "grow": {
      "type": "SystemStyleObject[\"flexGrow\"]",
      "isRequired": false
    },
    "shrink": {
      "type": "SystemStyleObject[\"flexShrink\"]",
      "isRequired": false
    },
    "inline": {
      "type": "boolean",
      "isRequired": false
    }
  },
  "Float": {
    "offsetX": {
      "type": "SystemStyleObject[\"left\"]",
      "isRequired": false,
      "description": "The x offset of the indicator"
    },
    "offsetY": {
      "type": "SystemStyleObject[\"top\"]",
      "isRequired": false,
      "description": "The y offset of the indicator"
    },
    "offset": {
      "type": "SystemStyleObject[\"top\"]",
      "isRequired": false,
      "description": "The x and y offset of the indicator"
    },
    "placement": {
      "type": "ConditionalValue<\n    | \"bottom-end\"\n    | \"bottom-start\"\n    | \"top-end\"\n    | \"top-start\"\n    | \"bottom-center\"\n    | \"top-center\"\n    | \"middle-center\"\n    | \"middle-end\"\n    | \"middle-start\"\n  >",
      "defaultValue": "top-end",
      "isRequired": false,
      "description": "The placement of the indicator"
    }
  },
  "Grid": {
    "templateColumns": {
      "type": "SystemStyleObject[\"gridTemplateColumns\"]",
      "isRequired": false
    },
    "autoFlow": {
      "type": "SystemStyleObject[\"gridAutoFlow\"]",
      "isRequired": false
    },
    "autoRows": {
      "type": "SystemStyleObject[\"gridAutoRows\"]",
      "isRequired": false
    },
    "autoColumns": {
      "type": "SystemStyleObject[\"gridAutoColumns\"]",
      "isRequired": false
    },
    "templateRows": {
      "type": "SystemStyleObject[\"gridTemplateRows\"]",
      "isRequired": false
    },
    "templateAreas": {
      "type": "SystemStyleObject[\"gridTemplateAreas\"]",
      "isRequired": false
    },
    "column": {
      "type": "SystemStyleObject[\"gridColumn\"]",
      "isRequired": false
    },
    "row": {
      "type": "SystemStyleObject[\"gridRow\"]",
      "isRequired": false
    },
    "inline": {
      "type": "boolean",
      "isRequired": false
    }
  },
  "GridItem": {
    "area": {
      "type": "SystemStyleObject[\"gridArea\"]",
      "isRequired": false
    },
    "colSpan": {
      "type": "ConditionalValue<number | \"auto\">",
      "isRequired": false
    },
    "colStart": {
      "type": "ConditionalValue<number | \"auto\">",
      "isRequired": false
    },
    "colEnd": {
      "type": "ConditionalValue<number | \"auto\">",
      "isRequired": false
    },
    "rowStart": {
      "type": "ConditionalValue<number | \"auto\">",
      "isRequired": false
    },
    "rowEnd": {
      "type": "ConditionalValue<number | \"auto\">",
      "isRequired": false
    },
    "rowSpan": {
      "type": "ConditionalValue<number | \"auto\">",
      "isRequired": false
    }
  },
  "SimpleGrid": {
    "templateColumns": {
      "isRequired": false
    },
    "autoFlow": {
      "isRequired": false
    },
    "autoRows": {
      "isRequired": false
    },
    "autoColumns": {
      "isRequired": false
    },
    "templateRows": {
      "isRequired": false
    },
    "templateAreas": {
      "isRequired": false
    },
    "column": {
      "isRequired": false
    },
    "row": {
      "isRequired": false
    },
    "inline": {
      "isRequired": false
    },
    "minChildWidth": {
      "type": "GridProps[\"minWidth\"]",
      "isRequired": false,
      "description": "The width at which child elements will break into columns. Pass a number for pixel values or a string for any other valid CSS length."
    },
    "columns": {
      "type": "ConditionalValue<number>",
      "isRequired": false,
      "description": "The number of columns"
    }
  },
  "ClientOnly": {
    "fallback": {
      "type": "React.ReactNode",
      "isRequired": false
    }
  },
  "Wrap": {
    "justify": {
      "type": "SystemStyleObject[\"justifyContent\"]",
      "isRequired": false,
      "description": "The `justify-content` value (for cross-axis alignment)"
    },
    "align": {
      "type": "SystemStyleObject[\"alignItems\"]",
      "isRequired": false,
      "description": "The `align-items` value (for main axis alignment)"
    },
    "direction": {
      "type": "SystemStyleObject[\"flexDirection\"]",
      "isRequired": false,
      "description": "The `flex-direction` value"
    }
  },
  "WrapItem": {},
  "Checkmark": {
    "checked": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the checkmark is checked"
    },
    "indeterminate": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the checkmark is indeterminate"
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the checkmark is disabled"
    }
  },
  "Show": {
    "when": {
      "type": "T | null | undefined",
      "isRequired": false,
      "description": "If `true`, it'll render the `children` prop"
    },
    "fallback": {
      "type": "React.ReactNode",
      "isRequired": false,
      "description": "The fallback content to render if `when` is `false`"
    }
  },
  "Radiomark": {
    "checked": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the checkmark is checked"
    },
    "disabled": {
      "type": "boolean",
      "isRequired": false,
      "description": "Whether the checkmark is disabled"
    }
  },
  "For": {
    "each": {
      "type": "T[] | readonly T[] | undefined",
      "isRequired": false,
      "description": "The array to iterate over"
    },
    "fallback": {
      "type": "React.ReactNode",
      "isRequired": false,
      "description": "The fallback content to render when the array is empty"
    }
  }
}